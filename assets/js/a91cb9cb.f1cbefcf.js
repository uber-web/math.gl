"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[757],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>b});var o=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=o.createContext({}),p=function(e){var t=o.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=p(e.components);return o.createElement(l.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),m=p(r),d=n,b=m["".concat(l,".").concat(d)]||m[d]||u[d]||a;return r?o.createElement(b,i(i({ref:t},s),{},{components:r})):o.createElement(b,i({ref:t},s))}));function b(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,i=new Array(a);i[0]=d;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[m]="string"==typeof e?e:n,i[1]=c;for(var p=2;p<a;p++)i[p]=r[p];return o.createElement.apply(null,i)}return o.createElement.apply(null,r)}d.displayName="MDXCreateElement"},3453:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>c,toc:()=>p});var o=r(7462),n=(r(7294),r(3905));const a={},i="Overview",c={unversionedId:"modules/web-mercator/README",id:"modules/web-mercator/README",title:"Overview",description:"The @math.gl/web-mercator module is the new home for the now archivedviewport-mercator-project repository, as of Oct 1, 2019.",source:"@site/../docs/modules/web-mercator/README.md",sourceDirName:"modules/web-mercator",slug:"/modules/web-mercator/",permalink:"/math.gl/docs/modules/web-mercator/",draft:!1,editUrl:"https://github.com/uber-web/math.gl/tree/master/website/../docs/modules/web-mercator/README.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"getSunDirection",permalink:"/math.gl/docs/modules/sun/api-reference/get-sun-direction"},next:{title:"Web Mercator Utility Functions",permalink:"/math.gl/docs/modules/web-mercator/api-reference/web-mercator-utils"}},l={},p=[{value:"Who is this for?",id:"who-is-this-for",level:2},{value:"Example Usage",id:"example-usage",level:2}],s={toc:p},m="wrapper";function u(e){let{components:t,...r}=e;return(0,n.kt)(m,(0,o.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"overview"},"Overview"),(0,n.kt)("p",{class:"badges"},(0,n.kt)("img",{src:"https://img.shields.io/badge/From-v3.1-blue.svg?style=flat-square",alt:"From-v3.1"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"The ",(0,n.kt)("inlineCode",{parentName:"p"},"@math.gl/web-mercator")," module is the new home for the now archived",(0,n.kt)("a",{parentName:"p",href:"https://github.com/uber-common/viewport-mercator-project/blob/master/docs/whats-new.md"},(0,n.kt)("inlineCode",{parentName:"a"},"viewport-mercator-project"))," repository, as of Oct 1, 2019.")),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"@math.gl/web-mercator")," module offers projection and camera utilities supporting the spherical Web Mercator Projection. At its core, this is a utility for converting to and from map coordinates (i.e. latitude, longitude) to screen coordinates and back."),(0,n.kt)("h2",{id:"who-is-this-for"},"Who is this for?"),(0,n.kt)("p",null,"Specifically built for use with ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/uber/deck.gl"},"deck.gl")," and ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/uber/react-map-gl"},"react-map-gl"),", but potentially useful for any web mapping application that wants to support perspective enabled Web Mercator Projections with floating point zoom levels."),(0,n.kt)("h2",{id:"example-usage"},"Example Usage"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"WebMercatorViewport"),' class offers the equivalent of a 3D matrix "camera" class of the type you would find in any 3D/WebGL/OpenGL library.'),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"npm install @math.gl/web-mercator --save\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"import WebMercatorViewport from '@math.gl/web-mercator';\n\n// A viewport looking at San Francisco city area\nconst viewport = new WebMercatorViewport({\n  width: 800,\n  height: 600,\n  longitude: -122.45,\n  latitude: 37.78,\n  zoom: 12,\n  pitch: 60,\n  bearing: 30\n});\n\nviewport.project([-122.45, 37.78]);\n// returns pixel coordinates [400, 300]\nviewport.unproject([400, 300]);\n// returns map coordinates [-122.45, 37.78]\n")))}u.isMDXComponent=!0}}]);