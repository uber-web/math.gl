"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[2093],{4137:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),d=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=d(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),u=d(n),p=o,m=u["".concat(l,".").concat(p)]||u[p]||g[p]||i;return n?r.createElement(m,s(s({ref:t},c),{},{components:n})):r.createElement(m,s({ref:t},c))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,s=new Array(i);s[0]=p;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a[u]="string"==typeof e?e:o,s[1]=a;for(var d=2;d<i;d++)s[d]=n[d];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},1838:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>g,frontMatter:()=>i,metadata:()=>a,toc:()=>d});var r=n(7462),o=(n(7294),n(4137));const i={},s="S2 API",a={unversionedId:"modules/dggs-s2/api-reference/s2",id:"modules/dggs-s2/api-reference/s2",title:"S2 API",description:"This module is still experimental. It may have issues and functionality may change in minor releases.",source:"@site/../docs/modules/dggs-s2/api-reference/s2.md",sourceDirName:"modules/dggs-s2/api-reference",slug:"/modules/dggs-s2/api-reference/s2",permalink:"/math.gl/docs/modules/dggs-s2/api-reference/s2",draft:!1,editUrl:"https://github.com/uber-web/math.gl/tree/master/website/../docs/modules/dggs-s2/api-reference/s2.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Overview",permalink:"/math.gl/docs/modules/dggs-s2/"}},l={},d=[{value:"Overview",id:"overview",level:2},{value:"API Notes",id:"api-notes",level:2},{value:"Core Functions",id:"core-functions",level:2},{value:"<code>getIndexFromS2Token(s2Token: string): Long</code>",id:"getindexfroms2tokens2token-string-long",level:4},{value:"<code>getS2TokenFromIndex(s2Index: Long): string</code>",id:"gets2tokenfromindexs2index-long-string",level:4},{value:"<code>getS2ChildIndex(s2Index: Long, index: number): Long</code>",id:"gets2childindexs2index-long-index-number-long",level:4},{value:"<code>getS2Center(s2Token: string): number[]</code>",id:"gets2centers2token-string-number",level:4},{value:"<code>getS2Boundary(s2Token: string): Float64Array</code>",id:"gets2boundarys2token-string-float64array",level:4}],c={toc:d},u="wrapper";function g(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"s2-api"},"S2 API"),(0,o.kt)("p",{class:"badges"},(0,o.kt)("img",{src:"https://img.shields.io/badge/From-v4.0-blue.svg?style=flat-square",alt:"From-v4.0"})),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"This module is still experimental. It may have issues and functionality may change in minor releases.")),(0,o.kt)("h2",{id:"overview"},"Overview"),(0,o.kt)("p",null,"S2 is a discrete global grid system built on the Hilbert curve.\nSee ",(0,o.kt)("a",{parentName:"p",href:"https://s2geometry.io/"},"s2geometry.io")," for more information."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"The S2 functions in math.gl are currently focused on ",(0,o.kt)("strong",{parentName:"p"},"decoding")," S2 encoded data, not encoding it.")),(0,o.kt)("h2",{id:"api-notes"},"API Notes"),(0,o.kt)("p",null,"The API provided by this module mainly works with S2 token strings,\nas those are typically found in data files."),(0,o.kt)("p",null,"But note that S2 cells have multiple representations. They can be represented as:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"S2 token strings (stringified versions of the indexes)"),(0,o.kt)("li",{parentName:"ul"},"S2 indexes which are 64 bit numbers represented by the ",(0,o.kt)("inlineCode",{parentName:"li"},"Long")," type."),(0,o.kt)("li",{parentName:"ul"},"Hilbert QuadKey strings."),(0,o.kt)("li",{parentName:"ul"},"S2 Cells which are tuples of numbers.")),(0,o.kt)("p",null,"Information on the the Long data type can be found here: TBA"),(0,o.kt)("h2",{id:"core-functions"},"Core Functions"),(0,o.kt)("h4",{id:"getindexfroms2tokens2token-string-long"},(0,o.kt)("inlineCode",{parentName:"h4"},"getIndexFromS2Token(s2Token: string): Long")),(0,o.kt)("p",null,"Decodes a string into the 64 bit token. "),(0,o.kt)("h4",{id:"gets2tokenfromindexs2index-long-string"},(0,o.kt)("inlineCode",{parentName:"h4"},"getS2TokenFromIndex(s2Index: Long): string")),(0,o.kt)("p",null,"Encodes the 64 bit token into a string."),(0,o.kt)("h4",{id:"gets2childindexs2index-long-index-number-long"},(0,o.kt)("inlineCode",{parentName:"h4"},"getS2ChildIndex(s2Index: Long, index: number): Long")),(0,o.kt)("p",null,"Returns the specific index of a child cell."),(0,o.kt)("h4",{id:"gets2centers2token-string-number"},(0,o.kt)("inlineCode",{parentName:"h4"},"getS2Center(s2Token: string): number[]")),(0,o.kt)("p",null,"Returns the center lng, lat of the S2 cell"),(0,o.kt)("h4",{id:"gets2boundarys2token-string-float64array"},(0,o.kt)("inlineCode",{parentName:"h4"},"getS2Boundary(s2Token: string): Float64Array")),(0,o.kt)("p",null,"Returns the boundary as a list of lng, lat of the S2 cell"))}g.isMDXComponent=!0}}]);