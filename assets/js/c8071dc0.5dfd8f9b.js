"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[8223],{4137:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>k});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function u(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?u(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):u(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function d(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},u=Object.keys(e);for(n=0;n<u.length;n++)r=u[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var u=Object.getOwnPropertySymbols(e);for(n=0;n<u.length;n++)r=u[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),i=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=i(e.components);return n.createElement(l.Provider,{value:t},e.children)},s="mdxType",y={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,u=e.originalType,l=e.parentName,c=d(e,["components","mdxType","originalType","parentName"]),s=i(r),p=a,k=s["".concat(l,".").concat(p)]||s[p]||y[p]||u;return r?n.createElement(k,o(o({ref:t},c),{},{components:r})):n.createElement(k,o({ref:t},c))}));function k(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var u=r.length,o=new Array(u);o[0]=p;var d={};for(var l in t)hasOwnProperty.call(t,l)&&(d[l]=t[l]);d.originalType=e,d[s]="string"==typeof e?e:a,o[1]=d;for(var i=2;i<u;i++)o[i]=r[i];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},7258:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>y,frontMatter:()=>u,metadata:()=>d,toc:()=>i});var n=r(7462),a=(r(7294),r(4137));const u={},o="QuadKey API",d={unversionedId:"modules/quadkey/api-reference/quadkey",id:"modules/quadkey/api-reference/quadkey",title:"QuadKey API",description:"The quadkey library is currently focused on decoding quadkeys.",source:"@site/../docs/modules/quadkey/api-reference/quadkey.md",sourceDirName:"modules/quadkey/api-reference",slug:"/modules/quadkey/api-reference/quadkey",permalink:"/math.gl/docs/modules/quadkey/api-reference/quadkey",draft:!1,editUrl:"https://github.com/uber-web/math.gl/tree/master/website/../docs/modules/quadkey/api-reference/quadkey.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Overview",permalink:"/math.gl/docs/modules/quadkey/"},next:{title:"Overview",permalink:"/math.gl/docs/modules/s2/"}},l={},i=[{value:"Functions",id:"functions",level:2},{value:"<code>getQuadkeyLngLat(quadkey: string): number[]</code>",id:"getquadkeylnglatquadkey-string-number",level:4},{value:"<code>getQuadkeyBoundary(quadkey: string): number[][]</code>",id:"getquadkeyboundaryquadkey-string-number",level:4},{value:"<code>getQuadkeyBoundaryFlat(quadkey: string): number[]</code>",id:"getquadkeyboundaryflatquadkey-string-number",level:4}],c={toc:i},s="wrapper";function y(e){let{components:t,...r}=e;return(0,a.kt)(s,(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"quadkey-api"},"QuadKey API"),(0,a.kt)("p",{class:"badges"},(0,a.kt)("img",{src:"https://img.shields.io/badge/From-v3.7-blue.svg?style=flat-square",alt:"From-v3.7"})),(0,a.kt)("p",null,"The quadkey library is currently focused on decoding quadkeys."),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"The quadkey functions in math.gl are currently focused on ",(0,a.kt)("strong",{parentName:"p"},"decoding")," S2 encoded data, not encoding it.")),(0,a.kt)("h2",{id:"functions"},"Functions"),(0,a.kt)("h4",{id:"getquadkeylnglatquadkey-string-number"},(0,a.kt)("inlineCode",{parentName:"h4"},"getQuadkeyLngLat(quadkey: string): number[]")),(0,a.kt)("p",null,"Returns the center lng, lat of a quadkey cell."),(0,a.kt)("h4",{id:"getquadkeyboundaryquadkey-string-number"},(0,a.kt)("inlineCode",{parentName:"h4"},"getQuadkeyBoundary(quadkey: string): number[][]")),(0,a.kt)("p",null,"Returns the center lng, lat of a quadkey cell."),(0,a.kt)("h4",{id:"getquadkeyboundaryflatquadkey-string-number"},(0,a.kt)("inlineCode",{parentName:"h4"},"getQuadkeyBoundaryFlat(quadkey: string): number[]")),(0,a.kt)("p",null,"Returns the center lng, lat of a quadkey cell."))}y.isMDXComponent=!0}}]);