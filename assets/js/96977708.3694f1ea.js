"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[4662],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>c});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var d=a.createContext({}),p=function(e){var t=a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=p(e.components);return a.createElement(d.Provider,{value:t},e.children)},u="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,d=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),u=p(n),m=r,c=u["".concat(d,".").concat(m)]||u[m]||g[m]||l;return n?a.createElement(c,i(i({ref:t},s),{},{components:n})):a.createElement(c,i({ref:t},s))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=m;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o[u]="string"==typeof e?e:r,i[1]=o;for(var p=2;p<l;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1991:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>g,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const l={},i="Discrete Global Grids",o={unversionedId:"developer-guide/dggs",id:"developer-guide/dggs",title:"Discrete Global Grids",description:"Working with discrete global grids is a powerful way of unifying the treatment of geospatial data.",source:"@site/../docs/developer-guide/dggs.md",sourceDirName:"developer-guide",slug:"/developer-guide/dggs",permalink:"/math.gl/docs/developer-guide/dggs",draft:!1,editUrl:"https://github.com/uber-web/math.gl/tree/master/website/../docs/developer-guide/dggs.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Accuracy of Offset Projection",permalink:"/math.gl/docs/modules/web-mercator/developer-guide/offset-projection-accuracy"},next:{title:"Overview",permalink:"/math.gl/docs/modules/types/"}},d={},p=[{value:"Goals",id:"goals",level:2},{value:"Supported Grid Systems",id:"supported-grid-systems",level:2},{value:"API",id:"api",level:2}],s={toc:p},u="wrapper";function g(e){let{components:t,...l}=e;return(0,r.kt)(u,(0,a.Z)({},s,l,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"discrete-global-grids"},"Discrete Global Grids"),(0,r.kt)("p",null,"Working with discrete global grids is a powerful way of unifying the treatment of geospatial data."),(0,r.kt)("p",null,"When working with multiple grid systems, working with a group of independent libraries with different API conventions and limitations can be non-optimal. There is sometimes a value in having a common set of libraries that work in a somewhat unified way."),(0,r.kt)("h2",{id:"goals"},"Goals"),(0,r.kt)("p",null,"The DGGS support in math.gl is currently mainly focused on decoding cell indexes or tokens into center points (lng/lat) or boundaries (polygon on lng/lats). "),(0,r.kt)("p",null,"Encoding and advanced operations (child/neighbor calculation, polygon fills etc are not currently included). Some basic encoding may be included in the future, however a secondary goal is to keep these libraries fairly small."),(0,r.kt)("p",null,"In terms of API design and nomenclature, the golden standard for DGGS systems at this time is arguably ",(0,r.kt)("a",{parentName:"p",href:"https://h3geo.org"},"H3"),", in terms of functionality, number of languages and platforms supported, community activity etc.  "),(0,r.kt)("h2",{id:"supported-grid-systems"},"Supported Grid Systems"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"DGGS"),(0,r.kt)("th",{parentName:"tr",align:null},"Module"),(0,r.kt)("th",{parentName:"tr",align:null},"Functionality"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("img",{alt:"GeoHash",src:n(81).Z,title:"GeoHash",width:"1268",height:"628"})),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"@math.gl/geohash")),(0,r.kt)("td",{parentName:"tr",align:null},"Get geometry of GeoHash tokens.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("img",{alt:"QuadKey",src:n(4749).Z,title:"QuadKey",width:"1252",height:"636"})),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"@math.gl/quadkey")),(0,r.kt)("td",{parentName:"tr",align:null},"Get geometry of QuadKey tokens")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("img",{alt:"S2",src:n(8477).Z,title:"S2",width:"1124",height:"588"})),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"@math.gl/s2")),(0,r.kt)("td",{parentName:"tr",align:null},"Get geometry of S2 tokens.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("img",{alt:"H3",src:n(8085).Z,title:"H3",width:"1296",height:"726"})),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"h3-js")," ","*"),(0,r.kt)("td",{parentName:"tr",align:null},"Get geometry of H3 tokens.")))),(0,r.kt)("p",null,"Note that ",(0,r.kt)("inlineCode",{parentName:"p"},"h3-js")," is not a ",(0,r.kt)("inlineCode",{parentName:"p"},"math.gl")," library. For H3 it is recommended to work directly with the H3 JavaScript bindings."),(0,r.kt)("h2",{id:"api"},"API"),(0,r.kt)("p",null,"Rather than expose the original function names as in the existing JavaScript libraries for each DGGS, math.gl applies API naming convention based on the H3 API."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Function"),(0,r.kt)("th",{parentName:"tr",align:null},"S2"),(0,r.kt)("th",{parentName:"tr",align:null},"QuadKey"),(0,r.kt)("th",{parentName:"tr",align:null},"GeoHash"),(0,r.kt)("th",{parentName:"tr",align:null},"H3"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Get cell center"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"getS2LngLat")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"getQuadKeyLngLat")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"getGeoHashLngLat")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"getH3LngLat"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Get cell boundary"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"getS2Boundary")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"getQuadKeyBoundary")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"getGeoHashBoundary")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"getH3Boundary"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Get cell boundary flat"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"getS2BoundaryFlat")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"getQuadKeyBoundaryFlat")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"getGeoHashBoundaryFlat")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"getH3BoundaryFlat"))))))}g.isMDXComponent=!0},81:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/geohash-c0e3daa00779237f6b20605b7db6da44.png"},8085:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/h3-fa04935dd44b5e557644e742b6b64d7e.png"},4749:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/quadkey-d0a4bf1a3af21e75bf2379d445f0b851.png"},8477:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/s2-7622e8f72c519d9a2bccfc8db662f445.png"}}]);