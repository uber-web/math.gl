"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[1716],{4137:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>m});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},l=Object.keys(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var p=a.createContext({}),s=function(e){var t=a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},f="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,p=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),f=s(r),c=n,m=f["".concat(p,".").concat(c)]||f[c]||d[c]||l;return r?a.createElement(m,i(i({ref:t},u),{},{components:r})):a.createElement(m,i({ref:t},u))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=r.length,i=new Array(l);i[0]=c;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[f]="string"==typeof e?e:n,i[1]=o;for(var s=2;s<l;s++)i[s]=r[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}c.displayName="MDXCreateElement"},2400:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var a=r(7462),n=(r(7294),r(4137));const l={},i="Accuracy of Offset Projection",o={unversionedId:"developer-guide/geospatial/web-mercator-offset-accuracy",id:"developer-guide/geospatial/web-mercator-offset-accuracy",title:"Accuracy of Offset Projection",description:"getDistanceScales offers a cheap way to project lng/lat or meter offset to pixels. It is useful when using the GPU to project a cluster of coordinates near an origin point, without suffering the precision loss of WebGL.",source:"@site/../docs/developer-guide/geospatial/web-mercator-offset-accuracy.md",sourceDirName:"developer-guide/geospatial",slug:"/developer-guide/geospatial/web-mercator-offset-accuracy",permalink:"/math.gl/docs/developer-guide/geospatial/web-mercator-offset-accuracy",draft:!1,editUrl:"https://github.com/uber-web/math.gl/tree/master/website/../docs/developer-guide/geospatial/web-mercator-offset-accuracy.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Web Mercator Coordinates",permalink:"/math.gl/docs/developer-guide/geospatial/web-mercator-coordinates"},next:{title:"Overview",permalink:"/math.gl/docs/modules/types/"}},p={},s=[],u={toc:s},f="wrapper";function d(e){let{components:t,...r}=e;return(0,n.kt)(f,(0,a.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"accuracy-of-offset-projection"},"Accuracy of Offset Projection"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"getDistanceScales")," offers a cheap way to project lng/lat or meter offset to pixels. It is useful when using the GPU to project a cluster of coordinates near an origin point, without suffering the precision loss of WebGL."),(0,n.kt)("p",null,"This article discusses the usage and accuracy of the distance scales."),(0,n.kt)("h1",{id:"meter-offset-to-pixels"},"Meter offset to pixels"),(0,n.kt)("p",null,"Regular meter offset to pixels projection:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"uniform vec3 unitsPerMeter;\nvec3 meters_offset_to_pixels_offset(vec3 meters) {\n    return meters * unitsPerMeter;\n}\n")),(0,n.kt)("p",null,"When ",(0,n.kt)("inlineCode",{parentName:"p"},"getDistanceScales")," is called with flag ",(0,n.kt)("inlineCode",{parentName:"p"},"highPrecision: true"),", it generates additional multipliers to compensate for precision loss over latitude change. More precise meter offset to pixels projection:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"uniform vec3 unitsPerMeter;\nuniform vec3 unitsPerMeter2;\nvec3 meters_offset_to_pixels_offset_adjusted(vec3 meters) {\n    return meters * (unitsPerMeter + unitsPerMeter2 * meters.y);\n}\n")),(0,n.kt)("p",null,"Accuracy at San Francisco (37N, z = 12):"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"R"),(0,n.kt)("th",{parentName:"tr",align:null},"X unadjusted"),(0,n.kt)("th",{parentName:"tr",align:null},"X adjusted"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"100 meters"),(0,n.kt)("td",{parentName:"tr",align:null},"off by -0.000 pixels, 0.001%"),(0,n.kt)("td",{parentName:"tr",align:null},"off by 0.000 pixels, 0.001%")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"1000 meters"),(0,n.kt)("td",{parentName:"tr",align:null},"off by -0.008 pixels, 0.012%"),(0,n.kt)("td",{parentName:"tr",align:null},"off by 0.000 pixels, 0.001%")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"5000 meters"),(0,n.kt)("td",{parentName:"tr",align:null},"off by -0.200 pixels, 0.060%"),(0,n.kt)("td",{parentName:"tr",align:null},"off by 0.002 pixels, 0.001%")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"10000 meters"),(0,n.kt)("td",{parentName:"tr",align:null},"off by -0.804 pixels, 0.121%"),(0,n.kt)("td",{parentName:"tr",align:null},"off by 0.003 pixels, 0.000%")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"30000 meters"),(0,n.kt)("td",{parentName:"tr",align:null},"off by -7.277 pixels, 0.366%"),(0,n.kt)("td",{parentName:"tr",align:null},"off by -0.021 pixels, 0.001%")))),(0,n.kt)("p",null,"Accuracy at high latitude (75N, z = 12):"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"R"),(0,n.kt)("th",{parentName:"tr",align:null},"X unadjusted"),(0,n.kt)("th",{parentName:"tr",align:null},"X adjusted"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"100 meters"),(0,n.kt)("td",{parentName:"tr",align:null},"off by -0.001 pixels, 0.006%"),(0,n.kt)("td",{parentName:"tr",align:null},"off by 0.000 pixels, 0.001%")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"1000 meters"),(0,n.kt)("td",{parentName:"tr",align:null},"off by -0.130 pixels, 0.061%"),(0,n.kt)("td",{parentName:"tr",align:null},"off by 0.001 pixels, 0.001%")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"5000 meters"),(0,n.kt)("td",{parentName:"tr",align:null},"off by -3.290 pixels, 0.309%"),(0,n.kt)("td",{parentName:"tr",align:null},"off by -0.001 pixels, 0.000%")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"10000 meters"),(0,n.kt)("td",{parentName:"tr",align:null},"off by -13.200 pixels, 0.620%"),(0,n.kt)("td",{parentName:"tr",align:null},"off by -0.044 pixels, 0.002%")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"30000 meters"),(0,n.kt)("td",{parentName:"tr",align:null},"off by -119.884 pixels, 1.877%"),(0,n.kt)("td",{parentName:"tr",align:null},"off by -1.473 pixels, 0.023%")))),(0,n.kt)("h1",{id:"lnglat-offset-to-pixels"},"LngLat offset to pixels"),(0,n.kt)("p",null,"Regular lng_lat offset to pixels projection:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"uniform vec3 unitsPerDegree;\nvec3 lnglat_offset_to_pixels_offset(vec3 lngLatZ) {\n    return lngLatZ * unitsPerDegree;\n}\n")),(0,n.kt)("p",null,"When ",(0,n.kt)("inlineCode",{parentName:"p"},"getDistanceScales")," is called with flag ",(0,n.kt)("inlineCode",{parentName:"p"},"highPrecision: true"),", it generates additional multipliers to compensate for precision loss over latitude change. More precise meter offset to pixels projection:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"uniform vec3 unitsPerDegree;\nuniform vec3 unitsPerDegree2;\nvec3 lnglat_offset_to_pixels_offset_adjusted(vec3 lngLatZ) {\n    return lngLatZ * (unitsPerDegree + unitsPerDegree2 * lngLatZ.y);\n}\n")),(0,n.kt)("p",null,"Accuracy at San Francisco (37N, z = 12):"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"R"),(0,n.kt)("th",{parentName:"tr",align:null},"Y unadjusted"),(0,n.kt)("th",{parentName:"tr",align:null},"Y adjusted"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"0.001 degrees"),(0,n.kt)("td",{parentName:"tr",align:null},"off by -0.000 pixels, 0.001%"),(0,n.kt)("td",{parentName:"tr",align:null},"off by -0.000 pixels, 0.000%")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"0.01 degrees"),(0,n.kt)("td",{parentName:"tr",align:null},"off by -0.005 pixels, 0.007%"),(0,n.kt)("td",{parentName:"tr",align:null},"off by -0.000 pixels, 0.000%")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"0.05 degrees"),(0,n.kt)("td",{parentName:"tr",align:null},"off by -0.125 pixels, 0.034%"),(0,n.kt)("td",{parentName:"tr",align:null},"off by -0.000 pixels, 0.000%")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"0.1 degrees"),(0,n.kt)("td",{parentName:"tr",align:null},"off by -0.499 pixels, 0.068%"),(0,n.kt)("td",{parentName:"tr",align:null},"off by -0.001 pixels, 0.000%")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"0.3 degrees"),(0,n.kt)("td",{parentName:"tr",align:null},"off by -4.508 pixels, 0.204%"),(0,n.kt)("td",{parentName:"tr",align:null},"off by -0.022 pixels, 0.001%")))),(0,n.kt)("p",null,"Accuracy at high latitude (75N, z = 12):"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"R"),(0,n.kt)("th",{parentName:"tr",align:null},"Y unadjusted"),(0,n.kt)("th",{parentName:"tr",align:null},"Y adjusted"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"0.001 degrees"),(0,n.kt)("td",{parentName:"tr",align:null},"off by -0.001 pixels, 0.003%"),(0,n.kt)("td",{parentName:"tr",align:null},"off by -0.000 pixels, 0.000%")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"0.01 degrees"),(0,n.kt)("td",{parentName:"tr",align:null},"off by -0.081 pixels, 0.034%"),(0,n.kt)("td",{parentName:"tr",align:null},"off by -0.000 pixels, 0.000%")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"0.05 degrees"),(0,n.kt)("td",{parentName:"tr",align:null},"off by -2.038 pixels, 0.172%"),(0,n.kt)("td",{parentName:"tr",align:null},"off by -0.005 pixels, 0.000%")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"0.1 degrees"),(0,n.kt)("td",{parentName:"tr",align:null},"off by -8.172 pixels, 0.345%"),(0,n.kt)("td",{parentName:"tr",align:null},"off by -0.039 pixels, 0.002%")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"0.3 degrees"),(0,n.kt)("td",{parentName:"tr",align:null},"off by -74.258 pixels, 1.046%"),(0,n.kt)("td",{parentName:"tr",align:null},"off by -1.055 pixels, 0.015%")))))}d.isMDXComponent=!0}}]);