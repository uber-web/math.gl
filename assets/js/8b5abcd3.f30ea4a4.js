"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[9417],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>y});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=s(n),d=a,y=c["".concat(p,".").concat(d)]||c[d]||m[d]||o;return n?r.createElement(y,i(i({ref:t},u),{},{components:n})):r.createElement(y,i({ref:t},u))}));function y(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[c]="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},258:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var r=n(7462),a=(n(7294),n(3905));const o={},i="earcut",l={unversionedId:"modules/polygon/api-reference/earcut",id:"modules/polygon/api-reference/earcut",title:"earcut",description:"Computes a triangulation of a polygon using the earcut library.",source:"@site/../docs/modules/polygon/api-reference/earcut.md",sourceDirName:"modules/polygon/api-reference",slug:"/modules/polygon/api-reference/earcut",permalink:"/docs/modules/polygon/api-reference/earcut",draft:!1,editUrl:"https://github.com/uber-web/math.gl/tree/master/website/../docs/modules/polygon/api-reference/earcut.md",tags:[],version:"current",frontMatter:{}},p={},s=[{value:"Usage",id:"usage",level:2}],u={toc:s},c="wrapper";function m(e){let{components:t,...n}=e;return(0,a.kt)(c,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"earcut"},"earcut"),(0,a.kt)("p",{class:"badges"},(0,a.kt)("img",{src:"https://img.shields.io/badge/From-v3.5-blue.svg?style=flat-square",alt:"From-v3.5"})),(0,a.kt)("p",null,"Computes a triangulation of a polygon using the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/mapbox/earcut"},"earcut library"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import {earcut} from '@math.gl/polygon';\n\nearcut([10, 0, 0, 50, 60, 60, 70, 10]);\n// returns [1, 0, 3, 3, 2, 1]\n\n// Polygon with a hole starting at vertex 4\nearcut([0, 0, 100, 0, 100, 100, 0, 100, 20, 20, 80, 20, 80, 80, 20, 80], [4]);\n// returns [3, 0, 4, 5, 4, 0, 3, 4, 7, 5, 0, 1, 2, 3, 7, 6, 5, 1, 2, 7, 6, 6, 1, 2]\n")),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"earcut(positions[, holeIndices, size = 2, areas, plane]);\n")),(0,a.kt)("p",null,"Arguments:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"positions")," (Array|TypedArray) - a flat array of the vertex positions that define the polygon."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"holeIndices")," (Array, optional) - is an array of hole indices if any (e.g. ","[5, 8]"," for a 12-vertex input would mean one hole with vertices 5\u20137 and another with 8\u201311)."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"size")," (Number, optional) - the number of elements in each vertex. Size ",(0,a.kt)("inlineCode",{parentName:"li"},"2")," will interpret ",(0,a.kt)("inlineCode",{parentName:"li"},"positions")," as ",(0,a.kt)("inlineCode",{parentName:"li"},"[x0, y0, x1, y1, ...]")," and size ",(0,a.kt)("inlineCode",{parentName:"li"},"3")," will interpret ",(0,a.kt)("inlineCode",{parentName:"li"},"positions")," as ",(0,a.kt)("inlineCode",{parentName:"li"},"[x0, y0, z0, x1, y1, z1, ...]"),". Default ",(0,a.kt)("inlineCode",{parentName:"li"},"2"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"areas")," (Array, optional) - areas of outer polygon and holes as computed by ",(0,a.kt)("inlineCode",{parentName:"li"},"getPolygonSignedArea()"),". Can be optionally supplied to speed up triangulation"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"plane")," (String, optional) - the 2D projection plane on which to tesselate a 3D polygon on. One of ",(0,a.kt)("inlineCode",{parentName:"li"},"xy"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"yz"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"xz"),". Default to ",(0,a.kt)("inlineCode",{parentName:"li"},"xy"))),(0,a.kt)("p",null,"Returns:"),(0,a.kt)("p",null,"An array of indices into the ",(0,a.kt)("inlineCode",{parentName:"p"},"positions")," array that describes the triangulation of the polygon"))}m.isMDXComponent=!0}}]);