"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[3987],{4137:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>h});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},d=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),c=p(r),u=a,h=c["".concat(l,".").concat(u)]||c[u]||m[u]||o;return r?n.createElement(h,i(i({ref:t},d),{},{components:r})):n.createElement(h,i({ref:t},d))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[c]="string"==typeof e?e:a,i[1]=s;for(var p=2;p<o;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},6879:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var n=r(7462),a=(r(7294),r(4137));const o={},i="Overview",s={unversionedId:"modules/proj4/README",id:"modules/proj4/README",title:"Overview",description:"The @math.gl/proj4 module provides support for conversion between major geospatial coordinate reference systems (CRS) and projections used with computer maps, such as:",source:"@site/../docs/modules/proj4/README.md",sourceDirName:"modules/proj4",slug:"/modules/proj4/",permalink:"/math.gl/docs/modules/proj4/",draft:!1,editUrl:"https://github.com/uber-web/math.gl/tree/master/website/../docs/modules/proj4/README.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Polygon",permalink:"/math.gl/docs/modules/polygon/api-reference/polygon"},next:{title:"Proj4Projection",permalink:"/math.gl/docs/modules/proj4/api-reference/proj4-projection"}},l={},p=[{value:"Classes",id:"classes",level:2},{value:"Usage",id:"usage",level:2},{value:"Geospatial Coordinate Systems",id:"geospatial-coordinate-systems",level:2},{value:"Aliases",id:"aliases",level:3},{value:"References",id:"references",level:3},{value:"Attribution",id:"attribution",level:2}],d={toc:p},c="wrapper";function m(e){let{components:t,...r}=e;return(0,a.kt)(c,(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"overview"},"Overview"),(0,a.kt)("p",{class:"badges"},(0,a.kt)("img",{src:"https://img.shields.io/badge/From-v3.3-blue.svg?style=flat-square",alt:"From-v3.3"})),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"@math.gl/proj4")," module provides support for conversion between major geospatial coordinate reference systems (CRS) and projections used with computer maps, such as:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/World_Geodetic_System"},"WGS84")," (World Geodetic System) coordinates."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Web_Mercator_projection"},"Web Mercator Projection"))),(0,a.kt)("h2",{id:"classes"},"Classes"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Class"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"Proj4Projection")),(0,a.kt)("td",{parentName:"tr",align:null},"A projection class")))),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("p",null,"Reproject WGS84 coordinates to another CRS"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import {Proj4Projection} from '@math.gl/proj4';\n\nconst nad83Proj =\n  '+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees';\nconst projection = new Proj4Projection({from: 'WGS84', to: nad83Proj});\n\nconst wgs84Position = [21, 78, 5000];\nconst reprojectedPosition = projection.project(wgs84Position);\n")),(0,a.kt)("h2",{id:"geospatial-coordinate-systems"},"Geospatial Coordinate Systems"),(0,a.kt)("p",null,"There are an infinite number of possible coordinate systems; therefore strict syntax is required to describe the parameters of any given CRS. Two main systems are supported in this module: Proj4 strings and WKT strings. Within WKT there exists both OGC WKT and ESRI WKT syntax; both are generally supported though some more-obscure projection keywords may not be used. Note that Proj4 strings ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/proj4js/proj4js/issues/222"},"can be slightly more accurate")," in some circumstances than WKT strings."),(0,a.kt)("p",null,'There are thousands of named "EPSG" projections. This module only includes aliases for those in the section below by default. To use a different EPSG projection, you can use ',(0,a.kt)("a",{parentName:"p",href:"https://epsg.io"},"https://epsg.io"),". For example, ",(0,a.kt)("a",{parentName:"p",href:"https://epsg.io/4326"},"https://epsg.io/4326")," defines standard longitude-latitude coordinates and lists multiple projection strings. Choose one of the ",(0,a.kt)("inlineCode",{parentName:"p"},"OGC WKT"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"ESRI WKT"),", or ",(0,a.kt)("inlineCode",{parentName:"p"},"PROJ.4")," strings listed."),(0,a.kt)("p",null,"The epsg.io website also has a public API, e.g., for WGS 84: ",(0,a.kt)("inlineCode",{parentName:"p"},"https://epsg.io/?q=4326&format=json")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "status": "ok",\n  "number_result": 1,\n  "results": [\n    {\n      "code": "4326",\n      "kind": "CRS-GEOGCRS",\n      "bbox": [90.0, -180.0, -90.0, 180.0],\n      "wkt": "GEOGCS[\\"WGS 84\\",DATUM[\\"WGS_1984\\",SPHEROID[\\"WGS 84\\",6378137,298.257223563,AUTHORITY[\\"EPSG\\",\\"7030\\"]],AUTHORITY[\\"EPSG\\",\\"6326\\"]],PRIMEM[\\"Greenwich\\",0,AUTHORITY[\\"EPSG\\",\\"8901\\"]],UNIT[\\"degree\\",0.0174532925199433,AUTHORITY[\\"EPSG\\",\\"9122\\"]],AUTHORITY[\\"EPSG\\",\\"4326\\"]]",\n      "unit": "degree (supplier to define representation)",\n      "proj4": "+proj=longlat +datum=WGS84 +no_defs",\n      "name": "WGS 84",\n      "area": "World.",\n      "default_trans": 0,\n      "trans": [],\n      "accuracy": ""\n    }\n  ]\n}\n')),(0,a.kt)("p",null,"If you already know the EPSG identifier, you can make the API request even simpler by adding the desired extension to your url:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'// https://epsg.io/4326.wkt\nGEOGCS["WGS 84",DATUM["WGS_1984",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6326"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AUTHORITY["EPSG","4326"]]\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"// https://epsg.io/4326.proj4\n+proj=longlat +datum=WGS84 +no_defs\n")),(0,a.kt)("h3",{id:"aliases"},"Aliases"),(0,a.kt)("p",null,"Note that Proj4Projection allows aliases to be defined and comes with the following pre-installed aliases."),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Coordinate system"),(0,a.kt)("th",{parentName:"tr",align:null},"Aliases"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Lat/lon, WGS84 datum"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"EPSG:4326"),", ",(0,a.kt)("inlineCode",{parentName:"td"},"WGS84"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Lat/lon, NAD83 datum"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"EPSG:4269"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Web mercator"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"EPSG:3857"),", ",(0,a.kt)("inlineCode",{parentName:"td"},"EPSG:3785"),", ",(0,a.kt)("inlineCode",{parentName:"td"},"GOOGLE"),", ",(0,a.kt)("inlineCode",{parentName:"td"},"EPSG:900913"),", ",(0,a.kt)("inlineCode",{parentName:"td"},"EPSG:102113"))))),(0,a.kt)("h3",{id:"references"},"References"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"http://docs.opengeospatial.org/is/18-010r7/18-010r7.html"},"OGC WKT-CRS Specification")," standards documentation."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://spatialreference.org/"},"spatialreference.org")," a catalog of coordinate system references."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://epsg.io/"},"espg.io")," Lets the user look up the definition of a coordinate system.")),(0,a.kt)("p",null,"E.g. ",(0,a.kt)("a",{parentName:"p",href:"https://epsg.io/4326"},"https://epsg.io/4326")," provides the definition of WGS84 in WKT-CRS format:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'GEOGCS["WGS 84",\n    DATUM["WGS_1984",\n        SPHEROID["WGS 84",6378137,298.257223563,\n            AUTHORITY["EPSG","7030"]],\n        AUTHORITY["EPSG","6326"]],\n    PRIMEM["Greenwich",0,\n        AUTHORITY["EPSG","8901"]],\n    UNIT["degree",0.0174532925199433,\n        AUTHORITY["EPSG","9122"]],\n    AUTHORITY["EPSG","4326"]]\n')),(0,a.kt)("h2",{id:"attribution"},"Attribution"),(0,a.kt)("p",null,"This module is a wrapper around ",(0,a.kt)("a",{parentName:"p",href:"http://proj4js.org/"},(0,a.kt)("inlineCode",{parentName:"a"},"proj4js")),", which has a permissive ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/proj4js/proj4js/blob/master/LICENSE.md"},"license"),". A part of the ",(0,a.kt)("a",{parentName:"p",href:"https://trac.osgeo.org/metacrs/wiki"},"MetaCRS")," libraries."))}m.isMDXComponent=!0}}]);