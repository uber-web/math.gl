"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[4887],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>g});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),d=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=d(e.components);return n.createElement(c.Provider,{value:t},e.children)},s="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),s=d(r),m=o,g=s["".concat(c,".").concat(m)]||s[m]||u[m]||i;return r?n.createElement(g,a(a({ref:t},p),{},{components:r})):n.createElement(g,a({ref:t},p))}));function g(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[s]="string"==typeof e?e:o,a[1]=l;for(var d=2;d<i;d++)a[d]=r[d];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},3378:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var n=r(7462),o=(r(7294),r(3905));const i={},a="Geoid",l={unversionedId:"modules/geoid/api-reference/geoid",id:"modules/geoid/api-reference/geoid",title:"Geoid",description:'class Geoid - "Gravity Height Model"',source:"@site/../docs/modules/geoid/api-reference/geoid.md",sourceDirName:"modules/geoid/api-reference",slug:"/modules/geoid/api-reference/geoid",permalink:"/math.gl/docs/modules/geoid/api-reference/geoid",draft:!1,editUrl:"https://github.com/uber-web/math.gl/tree/master/website/../docs/modules/geoid/api-reference/geoid.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Overview",permalink:"/math.gl/docs/modules/geoid/"},next:{title:"parsePGM",permalink:"/math.gl/docs/modules/geoid/api-reference/parse-pgm"}},c={},d=[{value:"Methods",id:"methods",level:2},{value:"Constructor",id:"constructor",level:5},{value:"getHeight(lat: number, lon: number): number;",id:"getheightlat-number-lon-number-number",level:5}],p={toc:d},s="wrapper";function u(e){let{components:t,...r}=e;return(0,o.kt)(s,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"geoid"},"Geoid"),(0,o.kt)("p",{class:"badges"},(0,o.kt)("img",{src:"https://img.shields.io/badge/From-v3.4-blue.svg?style=flat-square",alt:"From-v3.4"})),(0,o.kt)("p",null,"class ",(0,o.kt)("inlineCode",{parentName:"p"},"Geoid"),' - "Gravity Height Model"'),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"Geoid")," class calculates difference between mean see level height and WGS84 ellipsoid height. It needs to be initialized with an earth gravity model file."),(0,o.kt)("p",null,'Input data have to be loaded from "Earth Gravity Model" ',"*",'.pgm file with "PGMLoader". A particular model file can be loaded on ',(0,o.kt)("a",{parentName:"p",href:"https://geographiclib.sourceforge.io/html/geoid.html"},"https://geographiclib.sourceforge.io/html/geoid.html")),(0,o.kt)("h2",{id:"methods"},"Methods"),(0,o.kt)("h5",{id:"constructor"},"Constructor"),(0,o.kt)("p",null,"Create a ",(0,o.kt)("inlineCode",{parentName:"p"},"Geoid")," instance."),(0,o.kt)("p",null,"@param options - object which includes parameters parsed from ",(0,o.kt)("em",{parentName:"p"},".pgm header\noptions.data - binary buffer of "),".pgm file"),(0,o.kt)("p",null,"Calculates difference between mean see level height and WGS84 ellipsoid height"),(0,o.kt)("p",null,"@param lat - latitude\n@param lon - longitude\n@returns height in meters"),(0,o.kt)("h5",{id:"getheightlat-number-lon-number-number"},"getHeight(lat: number, lon: number): number;"))}u.isMDXComponent=!0}}]);