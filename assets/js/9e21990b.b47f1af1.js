"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[7055],{4137:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>f});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var m=n.createContext({}),c=function(e){var t=n.useContext(m),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(m.Provider,{value:t},e.children)},s="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,m=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),s=c(r),d=o,f=s["".concat(m,".").concat(d)]||s[d]||p[d]||a;return r?n.createElement(f,i(i({ref:t},u),{},{components:r})):n.createElement(f,i({ref:t},u))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=d;var l={};for(var m in t)hasOwnProperty.call(t,m)&&(l[m]=t[m]);l.originalType=e,l[s]="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},2119:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>m,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var n=r(7462),o=(r(7294),r(4137));const a={},i="Matrix",l={unversionedId:"modules/core/api-reference/matrix",id:"modules/core/api-reference/matrix",title:"Matrix",description:"Matrix is a base class for Matrix3 and Matrix4, providing common methods to those classes.",source:"@site/../docs/modules/core/api-reference/matrix.md",sourceDirName:"modules/core/api-reference",slug:"/modules/core/api-reference/matrix",permalink:"/math.gl/docs/modules/core/api-reference/matrix",draft:!1,editUrl:"https://github.com/uber-web/math.gl/tree/master/website/../docs/modules/core/api-reference/matrix.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"MathArray",permalink:"/math.gl/docs/modules/core/api-reference/math-array"},next:{title:"Matrix3",permalink:"/math.gl/docs/modules/core/api-reference/matrix3"}},m={},c=[{value:"Methods",id:"methods",level:2},{value:"toString()",id:"tostring",level:3},{value:"setElement(): this",id:"setelement-this",level:3},{value:"getElement(): number",id:"getelement-number",level:3},{value:"getColumn(columnIndex: number [ , result: number3]): number3",id:"getcolumncolumnindex-number---result-number3-number3",level:3},{value:"setColumn(columnIndex: number, columnVector: number3): Matrix",id:"setcolumncolumnindex-number-columnvector-number3-matrix",level:3}],u={toc:c},s="wrapper";function p(e){let{components:t,...r}=e;return(0,o.kt)(s,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"matrix"},"Matrix"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"Matrix")," is a base class for ",(0,o.kt)("a",{parentName:"p",href:"./docs/modules/core/api-reference/vector3"},(0,o.kt)("inlineCode",{parentName:"a"},"Matrix3"))," and ",(0,o.kt)("a",{parentName:"p",href:"./docs/modules/core/api-reference/vector4"},(0,o.kt)("inlineCode",{parentName:"a"},"Matrix4")),", providing common methods to those classes."),(0,o.kt)("h2",{id:"methods"},"Methods"),(0,o.kt)("h3",{id:"tostring"},"toString()"),(0,o.kt)("p",null,"Returns a string representation of the matrix"),(0,o.kt)("h3",{id:"setelement-this"},"setElement(): this"),(0,o.kt)("p",null,'Sets the element at "conceptual position" ',(0,o.kt)("inlineCode",{parentName:"p"},"M[i][j]"),", row major indices by default"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"matrix3.set(i, j, value, columnMajor = false)")),(0,o.kt)("h3",{id:"getelement-number"},"getElement(): number"),(0,o.kt)("p",null,'Gets the element at "conceptual position" ',(0,o.kt)("inlineCode",{parentName:"p"},"M[i][j]"),", row major indices by default"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"matrix3.get(i, j, columnMajor = false)")),(0,o.kt)("h3",{id:"getcolumncolumnindex-number---result-number3-number3"},"getColumn(columnIndex: number [ , result: number","[3]","]): number","[3]"),(0,o.kt)("p",null,"Extracts a column from the matrix"),(0,o.kt)("h3",{id:"setcolumncolumnindex-number-columnvector-number3-matrix"},"setColumn(columnIndex: number, columnVector: number","[3]","): Matrix"),(0,o.kt)("p",null,"Copies a column into the matrix"))}p.isMDXComponent=!0}}]);