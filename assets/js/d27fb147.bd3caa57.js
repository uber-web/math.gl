"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[1001],{4137:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>c});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),d=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=d(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=d(a),g=r,c=u["".concat(s,".").concat(g)]||u[g]||m[g]||l;return a?n.createElement(c,i(i({ref:t},p),{},{components:a})):n.createElement(c,i({ref:t},p))}));function c(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=g;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[u]="string"==typeof e?e:r,i[1]=o;for(var d=2;d<l;d++)i[d]=a[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}g.displayName="MDXCreateElement"},1388:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>o,toc:()=>d});var n=a(7462),r=(a(7294),a(4137));const l={},i="Discrete Global Grids",o={unversionedId:"developer-guide/geospatial/dggs",id:"developer-guide/geospatial/dggs",title:"Discrete Global Grids",description:"Working with discrete global grids is a powerful way of unifying the treatment of geospatial data.",source:"@site/../docs/developer-guide/geospatial/dggs.md",sourceDirName:"developer-guide/geospatial",slug:"/developer-guide/geospatial/dggs",permalink:"/math.gl/docs/developer-guide/geospatial/dggs",draft:!1,editUrl:"https://github.com/uber-web/math.gl/tree/master/website/../docs/developer-guide/geospatial/dggs.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Geospatial Models",permalink:"/math.gl/docs/developer-guide/geospatial/geospatial-models"},next:{title:"Web Mercator Coordinates",permalink:"/math.gl/docs/developer-guide/geospatial/web-mercator-coordinates"}},s={},d=[{value:"Goals",id:"goals",level:2},{value:"Supported Grid Systems",id:"supported-grid-systems",level:2},{value:"API",id:"api",level:2},{value:"Comparison of DGGS Systems",id:"comparison-of-dggs-systems",level:2},{value:"H3",id:"h3",level:3},{value:"GeoHash",id:"geohash",level:3},{value:"QuadKey",id:"quadkey",level:3},{value:"Other systems",id:"other-systems",level:3}],p={toc:d},u="wrapper";function m(e){let{components:t,...l}=e;return(0,r.kt)(u,(0,n.Z)({},p,l,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"discrete-global-grids"},"Discrete Global Grids"),(0,r.kt)("p",null,"Working with discrete global grids is a powerful way of unifying the treatment of geospatial data."),(0,r.kt)("p",null,"When working with multiple grid systems, working with a group of independent libraries with different API conventions and limitations can be non-optimal. There is sometimes a value in having a common set of libraries that work in a somewhat unified way."),(0,r.kt)("h2",{id:"goals"},"Goals"),(0,r.kt)("p",null,"The DGGS support in math.gl is currently mainly focused on decoding cell indexes or tokens into center points (lng/lat) or boundaries (polygon on lng/lats). "),(0,r.kt)("p",null,"Encoding and advanced operations (child/neighbor calculation, polygon fills etc are not currently included). Some basic encoding may be included in the future, however a secondary goal is to keep these libraries fairly small."),(0,r.kt)("p",null,"In terms of API design and nomenclature, the golden standard for DGGS systems at this time is arguably ",(0,r.kt)("a",{parentName:"p",href:"https://h3geo.org"},"H3"),", in terms of functionality, number of languages and platforms supported, community activity etc.  "),(0,r.kt)("h2",{id:"supported-grid-systems"},"Supported Grid Systems"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"DGGS"),(0,r.kt)("th",{parentName:"tr",align:null},"Module"),(0,r.kt)("th",{parentName:"tr",align:null},"Functionality"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("img",{alt:"GeoHash",src:a(81).Z,title:"GeoHash",width:"1268",height:"628"})),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"@math.gl/geohash")),(0,r.kt)("td",{parentName:"tr",align:null},"Get geometry of GeoHash tokens.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("img",{alt:"QuadKey",src:a(4749).Z,title:"QuadKey",width:"1252",height:"636"})),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"@math.gl/quadkey")),(0,r.kt)("td",{parentName:"tr",align:null},"Get geometry of QuadKey tokens")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("img",{alt:"S2",src:a(8477).Z,title:"S2",width:"1124",height:"588"})),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"@math.gl/s2")),(0,r.kt)("td",{parentName:"tr",align:null},"Get geometry of S2 tokens.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("img",{alt:"H3",src:a(8085).Z,title:"H3",width:"1296",height:"726"})),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"h3-js")," ","*"),(0,r.kt)("td",{parentName:"tr",align:null},"Get geometry of H3 tokens.")))),(0,r.kt)("p",null,"Note that ",(0,r.kt)("inlineCode",{parentName:"p"},"h3-js")," is not a ",(0,r.kt)("inlineCode",{parentName:"p"},"math.gl")," library. For H3 it is recommended to work directly with the H3 JavaScript bindings."),(0,r.kt)("h2",{id:"api"},"API"),(0,r.kt)("p",null,"Rather than expose the original function names as in the existing JavaScript libraries for each DGGS, math.gl applies API naming convention based on the H3 API."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Function"),(0,r.kt)("th",{parentName:"tr",align:null},"S2"),(0,r.kt)("th",{parentName:"tr",align:null},"QuadKey"),(0,r.kt)("th",{parentName:"tr",align:null},"GeoHash"),(0,r.kt)("th",{parentName:"tr",align:null},"H3"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Get cell center"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"getS2LngLat")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"getQuadKeyLngLat")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"getGeoHashLngLat")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"getH3LngLat"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Get cell boundary"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"getS2Boundary")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"getQuadKeyBoundary")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"getGeoHashBoundary")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"getH3Boundary"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Get cell boundary flat"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"getS2BoundaryFlat")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"getQuadKeyBoundaryFlat")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"getGeoHashBoundaryFlat")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"getH3BoundaryFlat"))))),(0,r.kt)("h2",{id:"comparison-of-dggs-systems"},"Comparison of DGGS Systems"),(0,r.kt)("h3",{id:"h3"},"H3"),(0,r.kt)("p",null,"H3, initally developed at Uber, is now widely used across the geospatial indusry.\nWhile not directly supported by math.gl, is in fact the DGGS we would recommend for most applications."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Extensive, optimized, evolving API."),(0,r.kt)("li",{parentName:"ul"},"Superb cross-language support."),(0,r.kt)("li",{parentName:"ul"},"Equal distance between neighboring cells"),(0,r.kt)("li",{parentName:"ul"},"Similar size between all cells."),(0,r.kt)("li",{parentName:"ul"},"K-ring formation for filtering and convolutions")),(0,r.kt)("p",null,"Downsides:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"More complex projection math.")),(0,r.kt)("h3",{id:"geohash"},"GeoHash"),(0,r.kt)("p",null,"Geohash is common choice  open source word ",(0,r.kt)("a",{parentName:"p",href:"http://en.wikipedia.org/wiki/Geohash"},"http://en.wikipedia.org/wiki/Geohash")),(0,r.kt)("p",null,"Good cross-language support."),(0,r.kt)("h3",{id:"quadkey"},"QuadKey"),(0,r.kt)("p",null,"Bing Maps uses a ",(0,r.kt)("a",{parentName:"p",href:"http://msdn.microsoft.com/en-us/library/bb259689.aspx."},"quadkey")," structure as their tiling scheme. Here is an overview of the concept "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Quadtrees are more predictable in that each level spans a square (at least in terms of coordinates), whereas in geohash representation sometimes squares sometimes rectangles are spanned.")),(0,r.kt)("h3",{id:"other-systems"},"Other systems"))}m.isMDXComponent=!0},81:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/geohash-c0e3daa00779237f6b20605b7db6da44.png"},8085:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/h3-fa04935dd44b5e557644e742b6b64d7e.png"},4749:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/quadkey-d0a4bf1a3af21e75bf2379d445f0b851.png"},8477:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/s2-7622e8f72c519d9a2bccfc8db662f445.png"}}]);